.hashGenerator {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* Combine controls */
.controls {
    display: flex;
    flex-direction: column; /* Stack selectors and file input */
    gap: 1rem;
    padding: 1rem;
    background-color: var(--card-background);
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    border: 1px solid var(--border-color);
}

.codeTypeSelector {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Allow wrapping */
    gap: 1rem;
    /* margin-bottom: 0.5rem; */ /* Removed, handled by .controls gap */
}


/* File Input Styles */
.fileInputContainer {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem; /* Space before text areas */
    padding: 1rem;
    background-color: var(--card-background);
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    border: 1px solid var(--border-color); /* Added border like .controls */
}

.fileInputLabel {
    font-weight: 500;
    color: var(--text-dark);
    cursor: pointer; /* Indicate it's clickable */
}

.fileInput {
    /* Basic styling, can be enhanced */
    color: var(--text-color);
}

/* Hide default file input appearance (optional, requires more styling for custom look) */
/* .fileInput {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
} */

.fileName {
    font-style: italic;
    color: var(--text-light);
    font-size: 0.9rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px; /* Adjust as needed */
}

[data-theme='dark'] .fileInputContainer {
    background-color: var(--input-background);
    border-color: var(--border-color); /* Added border color */
}

.textAreas {
    display: grid;
    /* grid-template-columns: 1fr auto 1fr; */ /* Change to 1fr 1fr */
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    align-items: start;
    margin-top: 1rem; /* Add margin like other tools */
}

.textAreaContainer {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    background: white;
    padding: 1rem;
    border-radius: var(--border-radius);
    box-shadow: var(--card-shadow);
    border: 1px solid var(--border-color); /* Added border */
}

.textAreaContainer label {
    font-weight: 500;
    color: var(--text-dark);
    margin-bottom: 0.25rem;
}

.buttonGroup {
    display: flex;
    gap: 0.5rem;

    align-self: flex-end;
}

/* Remove .hashButtons as the button moves to .actionButtons */
/* .hashButtons { ... } */

.actionButtons {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    margin-top: 0.5rem; /* Reduced margin */
}

[data-theme='dark'] .textAreaContainer {
    background-color: var(--input-background);
    /* color: var(--text-color); */ /* Color inherited */
    border-color: var(--border-color); /* Added border color */
}


@media (max-width: 768px) {
    .controls {
        /* No change needed for controls container */
    }
    .codeTypeSelector {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Keep auto-fit */
    }

    .textAreas {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .textAreaContainer textarea {
        min-height: 150px;
    }

    /* Remove .hashButtons styles */
    
    .actionButtons {
        flex-direction: column;
    }

    .actionButtons button {
        width: 100%;
    }
}

/* Removed potentially unused styles */

/* Removed stray styles left over from deletion */